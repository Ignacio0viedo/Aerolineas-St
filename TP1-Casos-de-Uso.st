TestCase subclass: #ConjuntoDePruebas	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Casos-de-Uso'!!ConjuntoDePruebas commentStamp: '<historical>' prior: 0!A CalculadorDeExtrasTest is a test class for testing the behavior of CalculadorDeExtras!!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 19:21'!test12ViajesConCriterioMinimoDebeDevolverElViajeMasBarato	"Arrange"	|viajesCriterioMinimo viajeObtenido|	viajesCriterioMinimo := AlgoViajes new initializeConCriterio: 'Minimo'.	viajesCriterioMinimo registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'San Carlos de Bariloche' delPais: 'Argentina' aKms: 1578.	viajesCriterioMinimo registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Cusco' delPais: 'Peru' aKms: 3236.	"Act"   	viajeObtenido := viajesCriterioMinimo viajeIndicadoSegunCriterioPara: 'Joaquin'.	"Assert"	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'San Carlos de Bariloche' en: 'Argentina').! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 19:42'!test03AplicarDescuentosANacionalesADestinosNacionalesSeLeDebeRestar1500ADestinosExtranjerosNada	|tarifaObtenidaDestinoExtanjero precioEsperadaDestinoExtanjero tarifaObtenidaDestinoNacional precioEsperadaDestinoNacional|	tarifaObtenidaDestinoExtanjero := Tarifa new.	tarifaObtenidaDestinoExtanjero sumarle: 25.	precioEsperadaDestinoExtanjero := 25.	tarifaObtenidaDestinoNacional := Tarifa new.	tarifaObtenidaDestinoNacional sumarle: 25.	precioEsperadaDestinoNacional := 5.		Naciional aplicarConDestino: 'Argentina' Tarifa: tarifaObtenidaDestinoNacional.	Naciional aplicarConDestino: 'Italiana' Tarifa: tarifaObtenidaDestinoExtanjero.		self assert: tarifaObtenidaDestinoExtanjero precio equals: precioEsperadaDestinoExtanjero.	self assert: tarifaObtenidaDestinoNacional precio equals: precioEsperadaDestinoNacional.! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 17:27'!test01CalculosDeTarifa	|tarifa modeloDePrueba|	tarifa := Tarifa new.	tarifa sumarle: 10.	modeloDePrueba := 10.		self assert: (tarifa sumarle: 10) precio equals: (modeloDePrueba + 10).	self assert: (tarifa restarle: 10) precio equals: modeloDePrueba.	self assert: (tarifa elevarPor: 2) precio equals: (modeloDePrueba raisedTo: 2).	self assert: (tarifa aplicarRaizCuadrada) precio equals: modeloDePrueba.	self assert: (tarifa multiplicarPor: 2) precio equals: (modeloDePrueba * 2).	self assert: (tarifa aplicarLogaritmo) precio equals: ((modeloDePrueba * 2) log).! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 19:05'!test08CiudadEsperada	|ciudadEsperada|	ciudadEsperada := CiudadEsperada new.		ciudadEsperada establecerNombre: 'Cuzco'.	ciudadEsperada establecerPais: 'Peru'.		self assert: ciudadEsperada  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 19:06'!test09ComprobadorDeTarifasMinimo	|viajeMinimo viajeMaximo respuestaCorrecta respuestaIncorrecta comprobador|	viajeMinimo := ViajeCalculado new.	viajeMinimo establecerDestinoPais: 'Argentina' Ciudad: 'San Carlos de Bariloche' NacionalidadPasajero: 'Española' Kms: 1578.	viajeMaximo := ViajeCalculado new.	viajeMaximo establecerDestinoPais: 'Peru' Ciudad: 'Cusco' NacionalidadPasajero: 'Española' Kms: 3236.	comprobador := ComprobadorDeTarifasMinimo new.		respuestaCorrecta := comprobador comprobarSiAgregarViaje: viajeMinimo SobreViaje: viajeMaximo.	respuestaIncorrecta := comprobador comprobarSiAgregarViaje: viajeMaximo SobreViaje: viajeMinimo.		self assert: respuestaCorrecta equals: true.	self assert: respuestaIncorrecta equals: false.! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 20:02'!test04AplicadorDeDescuentosANacionalSeLeDebeAplicarLaRaizCuadradaYAlExtranjeroRestarle1500	|tarifaObtenidaExtanjero precioEsperadaExtanjero tarifaObtenidaNacional precioEsperadaNacional|	tarifaObtenidaExtanjero := Tarifa new.	tarifaObtenidaExtanjero sumarle: 1500.	precioEsperadaExtanjero := 0.	tarifaObtenidaNacional := Tarifa new.	tarifaObtenidaNacional sumarle: 25.	precioEsperadaNacional := 5.		AplicadorDeDescuentos aplicarANacionalidad:'Argentina' Destino: 'Argentina' Tarifa: tarifaObtenidaNacional.	AplicadorDeDescuentos aplicarANacionalidad:'Italiana' Destino: 'Argentina' Tarifa: tarifaObtenidaExtanjero.		self assert: tarifaObtenidaExtanjero precio equals: precioEsperadaExtanjero.	self assert: tarifaObtenidaNacional precio equals: precioEsperadaNacional.! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 19:21'!test13ViajesConCriterioMaximoDebeDevolverElViajeMasCaro	"Arrange"	|viajesCriterioMaximo viajeObtenido|	viajesCriterioMaximo := AlgoViajes new initializeConCriterio: 'Maximo'.	viajesCriterioMaximo registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	viajesCriterioMaximo registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	viajesCriterioMaximo registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	"Act"   viajeObtenido := viajesCriterioMaximo viajeIndicadoSegunCriterioPara: 'Pablo'.	"Assert"	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 19:20'!test11ViajeCalculado	"Arrange"	|viajeObtenido|	viajeObtenido := ViajeCalculado new.		"Act"	viajeObtenido establecerDestinoPais: 'Argentina' Ciudad: 'San Carlos de Bariloche' NacionalidadPasajero: 'Española' Kms: 1578.	"Assert"	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'San Carlos de Bariloche' en: 'Argentina').	self assert: (viajeObtenido tarifa) equals: 1815.698073594754.! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 19:38'!test18PruebaGeneral	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Maximo'.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") * 1.2 "Impuesto al viaje para turistas nacionales".	"Act"   viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.	"Assert"	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 19:22'!test16ExcepcionViajeInexistente	"Arrange"	|viaje|	viaje := AlgoViajes new initializeConCriterio: 'Minimo'.		"Assert"	self should: [viaje viajeIndicadoSegunCriterioPara: 'x'] raise: ViajeInexistente.! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 20:08'!test05AplicadorDeRecargoANacionalSeLeDebeMultiplicarYAlExtranjeroSeLeDebeElevarPor1Punto2	|tarifaObtenidaExtanjero precioEsperadaExtanjero tarifaObtenidaNacional precioEsperadaNacional|	tarifaObtenidaExtanjero := Tarifa new.	tarifaObtenidaExtanjero sumarle: 100.	precioEsperadaExtanjero := 100 raisedTo: 1.2.	tarifaObtenidaNacional := Tarifa new.	tarifaObtenidaNacional sumarle: 100.	precioEsperadaNacional := 100 * 1.2.		AplicadorDeRecargos aplicarANacionalidad: 'Argentina' Tarifa: tarifaObtenidaNacional.	AplicadorDeRecargos aplicarANacionalidad: 'Italiana' Tarifa: tarifaObtenidaExtanjero.	self assert: tarifaObtenidaExtanjero precio equals: precioEsperadaExtanjero.	self assert: tarifaObtenidaNacional precio equals: precioEsperadaNacional.! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 19:28'!test14algoViajesDebeDevolverElViajeCorrectoIndicadoSegunCriterio"	""Arrange""	|algoViajesMaximo algoViajesMinimo viajeCriterioMaximo viajeCriterioMinimo|	algoViajesMaximo := AlgoViajes ConCriterio: 'Maximo'.	algoViajesMinimo := AlgoViajes ConCriterio: 'Minimo'.	viajeCriterioMaximo := AlgoViajes new initializeConCriterio: 'Maximo'.	viajeCriterioMinimo := AlgoViajes new initializeConCriterio: 'Minimo'.		""Act""	algoViajesMaximo registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	algoViajesMaximo registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	algoViajesMaximo registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.		viajeCriterioMaximo registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	viajeCriterioMaximo registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	viajeCriterioMaximo registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.		viajeCriterioMinimo registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'San Carlos de Bariloche' delPais: 'Argentina' aKms: 1578.	viajeCriterioMinimo registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Cusco' delPais: 'Peru' aKms: 3236.		algoViajesMinimo registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'San Carlos de Bariloche' delPais: 'Argentina' aKms: 1578.	algoViajesMinimo registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Cusco' delPais: 'Peru' aKms: 3236.	""Assert""	self assert: ((algoViajesMaximo viajeIndicadoSegunCriterioPara: 'Pablo')destino)  equals: ((viajeCriterioMaximo viajeIndicadoSegunCriterioPara: 'Pablo')destino).	self assert: ((algoViajesMinimo viajeIndicadoSegunCriterioPara: 'Joaquin')destino)  equals: ((viajeCriterioMinimo viajeIndicadoSegunCriterioPara: 'Joaquin')destino)."! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 20:08'!test06AplicadorTarifaDeDesembarcoSegunDestinoANacionalSeLeDebeMultiplicarPor1Con28AlMercosurSeLeDebeElevarPor1Con12YAlExtranjeroAplicarElLogaritmoYSumarle3600	|tarifaObtenidaExtanjero precioEsperadaExtanjero tarifaObtenidaNacional precioEsperadaNacional tarifaObtenidaMercosur precioEsperadaMercosur|	tarifaObtenidaExtanjero := Tarifa new.	tarifaObtenidaExtanjero sumarle: 100.	precioEsperadaExtanjero := (100 log + 3600).	tarifaObtenidaNacional := Tarifa new.	tarifaObtenidaNacional sumarle: 100.	precioEsperadaNacional := 100 * 1.28.	tarifaObtenidaMercosur := Tarifa new.	tarifaObtenidaMercosur sumarle: 100.	precioEsperadaMercosur := 100 raisedTo: 1.12.		AplicadorTarifaDeDesembarco aplicarAPaisDestino: 'Argentina' Tarifa: tarifaObtenidaNacional.	AplicadorTarifaDeDesembarco aplicarAPaisDestino: 'Italiana' Tarifa: tarifaObtenidaExtanjero.	AplicadorTarifaDeDesembarco aplicarAPaisDestino: 'Peru' Tarifa: tarifaObtenidaMercosur.		self assert: tarifaObtenidaExtanjero precio equals: precioEsperadaExtanjero.	self assert: tarifaObtenidaNacional precio equals: precioEsperadaNacional.	self assert: tarifaObtenidaMercosur precio equals: precioEsperadaMercosur.! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 19:07'!test10ComprobadorDeTarifasMaximo	|viajeMinimo viajeMaximo respuestaCorrecta respuestaIncorrecta comprobador|	viajeMinimo := ViajeCalculado new.	viajeMinimo establecerDestinoPais: 'Argentina' Ciudad: 'San Carlos de Bariloche' NacionalidadPasajero: 'Española' Kms: 1578.	viajeMaximo := ViajeCalculado new.	viajeMaximo establecerDestinoPais: 'Peru' Ciudad: 'Cusco' NacionalidadPasajero: 'Española' Kms: 3236.	comprobador := ComprobadorDeTarifasMaximo new.		respuestaCorrecta := comprobador comprobarSiAgregarViaje: viajeMaximo SobreViaje: viajeMinimo.	respuestaIncorrecta := comprobador comprobarSiAgregarViaje: viajeMinimo SobreViaje: viajeMaximo.		self assert: respuestaCorrecta equals: true.	self assert: respuestaIncorrecta equals: false.! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 19:22'!test15ExcepcionKilometrosInvalido	"Arrange"	|viaje|	viaje := AlgoViajes new initializeConCriterio: 'Maximo'.		"Assert"	self should: [viaje registrarPasajePara: 'x' deNacionalidad: 'x' conDestinoACiudad: 'x' delPais: 'x' aKms: 'x'] raise: KilometrosInvalidos.	self should: [viaje registrarPasajePara: 'x' deNacionalidad: 'x' conDestinoACiudad: 'x' delPais: 'x' aKms: -4] raise: KilometrosInvalidos.! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 18:13'!test07AplicarTodosLosExtrasAUnViaje	|tarifaObtenida precioEsperado|	tarifaObtenida := Tarifa new.	tarifaObtenida sumarle: 2377.	precioEsperado := 6697.156976768827.		CalculadorDeExtras aplicarExtrasAPasajeroNacionalidad: 'Italiana' Hacia: 'Argentina' ATarifa: tarifaObtenida.		self assert: tarifaObtenida precio equals: precioEsperado.! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 19:22'!test17ExcepcionCriterioInvalido	"Arrange"		"Assert"	self should: [AlgoViajes ConCriterio: 'x'] raise: CriterioInvalido.! !!ConjuntoDePruebas methodsFor: 'tests' stamp: 'IgnacioOviedo 5/11/2023 19:42'!test02AplicarDescuentosAExtranjerosADestinosNacionalesSeLeDebeRestar1500ADestinosExtranjerosNada	|tarifaObtenidaDestinoExtanjero precioEsperadaDestinoExtanjero tarifaObtenidaDestinoNacional precioEsperadaDestinoNacional|	tarifaObtenidaDestinoExtanjero := Tarifa new.	tarifaObtenidaDestinoExtanjero sumarle: 1500.	precioEsperadaDestinoExtanjero := 1500.	tarifaObtenidaDestinoNacional := Tarifa new.	tarifaObtenidaDestinoNacional sumarle: 1500.	precioEsperadaDestinoNacional := 0.		Extranjero aplicarConDestino: 'Argentina' Tarifa: tarifaObtenidaDestinoNacional.	Extranjero aplicarConDestino: 'Italiana' Tarifa: tarifaObtenidaDestinoExtanjero.		self assert: tarifaObtenidaDestinoExtanjero precio equals: precioEsperadaDestinoExtanjero.	self assert: tarifaObtenidaDestinoNacional precio equals: precioEsperadaDestinoNacional.! !