Object subclass: #AlgoViajes	instanceVariableNames: 'Diccionario Comprobador'	classVariableNames: ''	package: 'TP1'!!AlgoViajes methodsFor: 'initialization' stamp: 'IgnacioOviedo 4/20/2023 18:05'!initializeConCriterio: criterio	Diccionario := Dictionary new.	(criterio = 'Maximo') ifTrue: [ 		Comprobador := ComprobadorDeTarifasMaximo new.		] ifFalse: [	(criterio = 'Minimo') ifTrue: [		Comprobador := ComprobadorDeTarifasMinimo new.		] ifFalse: [ 		CriterioInvalido new signal.		 ]	].! !!AlgoViajes methodsFor: 'Devolucion' stamp: 'IgnacioOviedo 4/20/2023 14:26'!viajeIndicadoSegunCriterioPara: nombre	(Diccionario includesKey: nombre) ifFalse: [			ViajeInexistente new signal.		].	^Diccionario at: nombre.! !!AlgoViajes methodsFor: 'Registro' stamp: 'IgnacioOviedo 4/20/2023 14:32'!registrarPasajePara: nombre deNacionalidad: nacionalidad conDestinoACiudad: ciudadDestino delPais: paisDestino aKms: kilometros	|viajeNuevo viajeViejo|	Comprobador comprobarSiLosKilometrosSonValidos: kilometros.	viajeNuevo := ViajeCalculado new.	viajeNuevo establecerDestinoPais: paisDestino Ciudad: ciudadDestino NacionalidadPasajero: nacionalidad Kms: kilometros.	(Diccionario includesKey: nombre) ifTrue: [ 		viajeViejo := Diccionario at: nombre.		(Comprobador comprobarSiAgregarViaje: viajeNuevo SobreViaje: viajeViejo) ifTrue: [ 			Diccionario at: nombre put: viajeNuevo.			].	] ifFalse: [ 			Diccionario at: nombre put: viajeNuevo.	].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoViajes class	instanceVariableNames: ''!!AlgoViajes class methodsFor: 'Principal' stamp: 'IgnacioOviedo 5/8/2023 14:07'!ConCriterio: criterio	^self new initializeConCriterio: criterio.! !Object subclass: #AplicadorDeDescuentos	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AplicadorDeDescuentos class	instanceVariableNames: 'Nacional'!!AplicadorDeDescuentos class methodsFor: 'initialize' stamp: 'IgnacioOviedo 5/11/2023 16:12'!initialize 	Nacional := 'Argentina'.! !!AplicadorDeDescuentos class methodsFor: 'selector' stamp: 'IgnacioOviedo 5/11/2023 20:02'!aplicarANacionalidad: Nacionalidad Destino: destino Tarifa: tarifa	self initialize.	(Nacionalidad = Nacional) ifTrue: [			Naciional aplicarConDestino: destino Tarifa: tarifa.		] ifFalse: [			Extranjero aplicarConDestino: destino Tarifa: tarifa.		].! !Object subclass: #AplicadorDeRecargos	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AplicadorDeRecargos class	instanceVariableNames: 'Nacional'!!AplicadorDeRecargos class methodsFor: 'principal' stamp: 'IgnacioOviedo 5/11/2023 20:08'!aplicarANacionalidad: nacionalidadPasajero Tarifa: tarifa	self initialize.	(nacionalidadPasajero = Nacional) ifTrue: [ 		tarifa multiplicarPor: 1.2.		 ]		ifFalse: [ 		tarifa elevarPor: 1.2.		].! !!AplicadorDeRecargos class methodsFor: 'initialize' stamp: 'IgnacioOviedo 5/11/2023 16:26'!initialize 	Nacional := 'Argentina'.! !Object subclass: #AplicadorTarifaDeDesembarco	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AplicadorTarifaDeDesembarco class	instanceVariableNames: 'Nacional Mercosur'!!AplicadorTarifaDeDesembarco class methodsFor: 'initialization' stamp: 'IgnacioOviedo 5/11/2023 16:31'!initialize	Nacional := 'Argentina'.	Mercosur := OrderedCollection new.	Mercosur addAll: #('Peru').! !!AplicadorTarifaDeDesembarco class methodsFor: 'principal' stamp: 'IgnacioOviedo 5/11/2023 20:08'!aplicarAPaisDestino: nombrePais Tarifa: tarifa	self initialize.	(nombrePais = Nacional) ifTrue: [ 		tarifa multiplicarPor: 1.28.		] ifFalse: [	(Mercosur includes: nombrePais) ifTrue: [ 		tarifa elevarPor: 1.12.		] ifFalse: [ 		tarifa aplicarLogaritmo.		tarifa sumarle: 3600.		 ]	].! !Object subclass: #AplicadoresDescuentosMenores	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AplicadoresDescuentosMenores class	instanceVariableNames: 'Nacional'!!AplicadoresDescuentosMenores class methodsFor: 'initialization' stamp: 'IgnacioOviedo 5/11/2023 19:58'!initialize 	Nacional := 'Argentina'.! !!AplicadoresDescuentosMenores class methodsFor: 'principal' stamp: 'IgnacioOviedo 5/11/2023 19:56'!aplicarConDestino: Destino Tarifa: tarifa	self subclassResponsibility.! !Object subclass: #CalculadorDeExtras	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CalculadorDeExtras class	instanceVariableNames: ''!!CalculadorDeExtras class methodsFor: 'Aplicacion General' stamp: 'IgnacioOviedo 5/11/2023 20:08'!aplicarExtrasAPasajeroNacionalidad: nacionalidadPasajero Hacia: paisDestino ATarifa: tarifa	self initialize.	AplicadorTarifaDeDesembarco aplicarAPaisDestino: paisDestino Tarifa: tarifa.	AplicadorDeDescuentos aplicarANacionalidad: nacionalidadPasajero Destino: paisDestino Tarifa: tarifa.	AplicadorDeRecargos aplicarANacionalidad: nacionalidadPasajero Tarifa: tarifa.! !Class subclass: #CiudadEsperada	instanceVariableNames: 'nombre pais'	classVariableNames: ''	package: 'TP1'!!CiudadEsperada methodsFor: 'comparing' stamp: 'JG 4/5/2023 11:28'!= other	^nombre = (other nombre).! !!CiudadEsperada methodsFor: 'accessing' stamp: 'IgnacioOviedo 5/11/2023 19:36'!nombre	^nombre. ! !!CiudadEsperada methodsFor: 'as yet unclassified' stamp: 'AV 4/5/2023 11:22'!establecerPais: unPais	pais := unPais.! !!CiudadEsperada methodsFor: 'as yet unclassified' stamp: 'AV 4/5/2023 11:21'!establecerNombre: unNombre	nombre := unNombre.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CiudadEsperada class	instanceVariableNames: ''!!CiudadEsperada class methodsFor: 'not defined category' stamp: 'AV 4/5/2023 11:21'!nombre: unNombre en: unPais | ciudadEsperada | 	ciudadEsperada := self new.	ciudadEsperada establecerNombre: unNombre. 	ciudadEsperada establecerPais: unPais.	^ ciudadEsperada ! !Object subclass: #ComprobadorDeTarifas	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ComprobadorDeTarifas methodsFor: 'Comprobadores' stamp: 'IgnacioOviedo 4/19/2023 20:34'!comprobarSiAgregarViaje: nuevo SobreViaje: viejo	self subclassResponsibility.! !!ComprobadorDeTarifas methodsFor: 'Comprobadores' stamp: 'IgnacioOviedo 4/20/2023 14:33'!comprobarSiLosKilometrosSonValidos: kms	(kms isNumber) ifFalse: [		KilometrosInvalidos new signal.		].	(kms > 0) ifFalse: [		KilometrosInvalidos new signal.		].! !ComprobadorDeTarifas subclass: #ComprobadorDeTarifasMaximo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ComprobadorDeTarifasMaximo methodsFor: 'principal' stamp: 'IgnacioOviedo 4/19/2023 20:37'!comprobarSiAgregarViaje: nuevo SobreViaje: viejo	|tarifaVieja tarifaNueva|	tarifaVieja := viejo tarifa.	tarifaNueva := nuevo tarifa.	(tarifaNueva > tarifaVieja) ifTrue: [ 		^true.	].	^false.! !ComprobadorDeTarifas subclass: #ComprobadorDeTarifasMinimo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ComprobadorDeTarifasMinimo methodsFor: 'principal' stamp: 'IgnacioOviedo 4/19/2023 20:37'!comprobarSiAgregarViaje: nuevo SobreViaje: viejo	|tarifaVieja tarifaNueva|	tarifaVieja := viejo tarifa.	tarifaNueva := nuevo tarifa.	(tarifaNueva < tarifaVieja) ifTrue: [ 		^true.	].	^false.! !Error subclass: #Excepciones	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Excepciones subclass: #CriterioInvalido	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!AplicadoresDescuentosMenores subclass: #Extranjero	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Extranjero class	instanceVariableNames: ''!!Extranjero class methodsFor: 'principal' stamp: 'IgnacioOviedo 5/11/2023 19:42'!aplicarConDestino: Destino Tarifa: tarifa	self initialize.	(Destino = Nacional) ifTrue: [			tarifa restarle: 1500.		].! !Excepciones subclass: #KilometrosInvalidos	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!AplicadoresDescuentosMenores subclass: #Naciional	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Naciional class	instanceVariableNames: ''!!Naciional class methodsFor: 'principal' stamp: 'IgnacioOviedo 5/11/2023 19:42'!aplicarConDestino: Destino Tarifa: tarifa	self initialize.	(Destino = Nacional) ifTrue: [			tarifa aplicarRaizCuadrada.		].! !Object subclass: #Tarifa	instanceVariableNames: 'Precio'	classVariableNames: ''	package: 'TP1'!!Tarifa methodsFor: 'getter' stamp: 'IgnacioOviedo 4/19/2023 20:21'!precio	^Precio.! !!Tarifa methodsFor: 'initialization' stamp: 'IgnacioOviedo 5/11/2023 16:58'!initialize	Precio := 0.! !!Tarifa methodsFor: 'setter' stamp: 'IgnacioOviedo 5/8/2023 15:32'!aplicarLogaritmo	Precio := Precio log.! !!Tarifa methodsFor: 'setter' stamp: 'IgnacioOviedo 5/11/2023 17:21'!restarle: numero	Precio := Precio - numero.! !!Tarifa methodsFor: 'setter' stamp: 'IgnacioOviedo 5/8/2023 15:33'!sumarle: numero	Precio := Precio + numero.! !!Tarifa methodsFor: 'setter' stamp: 'IgnacioOviedo 5/8/2023 15:30'!multiplicarPor: numero	Precio := Precio * numero.! !!Tarifa methodsFor: 'setter' stamp: 'IgnacioOviedo 5/8/2023 15:31'!elevarPor: numero	Precio := Precio raisedTo: numero.! !!Tarifa methodsFor: 'setter' stamp: 'IgnacioOviedo 5/8/2023 15:29'!aplicarRaizCuadrada	Precio := Precio sqrt.! !Object subclass: #ViajeCalculado	instanceVariableNames: 'Destino Calculadora tarifa'	classVariableNames: ''	package: 'TP1'!!ViajeCalculado methodsFor: 'getters' stamp: 'Ignacio 4/8/2023 13:37'!destino 	^Destino.! !!ViajeCalculado methodsFor: 'getters' stamp: 'IgnacioOviedo 4/19/2023 20:32'!tarifa	^tarifa precio.	! !!ViajeCalculado methodsFor: 'initialization' stamp: 'IgnacioOviedo 5/11/2023 19:07'!establecerDestinoPais: unPais Ciudad: unCiudad NacionalidadPasajero: unNacionalidad Kms: kms	Destino establecerNombre: unCiudad.	Destino establecerPais: unPais.	tarifa sumarle: kms.	CalculadorDeExtras aplicarExtrasAPasajeroNacionalidad: unNacionalidad Hacia: unPais ATarifa: tarifa.	! !!ViajeCalculado methodsFor: 'initialization' stamp: 'IgnacioOviedo 4/20/2023 11:48'!initialize	Destino := CiudadEsperada new.	tarifa := Tarifa new.! !Excepciones subclass: #ViajeInexistente	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!AplicadorDeDescuentos initialize!AplicadorDeRecargos initialize!AplicadorTarifaDeDesembarco initialize!AplicadoresDescuentosMenores initialize!